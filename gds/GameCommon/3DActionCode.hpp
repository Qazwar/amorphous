#ifndef  __3DACTIONCODE_H__
#define  __3DACTIONCODE_H__


enum eActionCode
{
	ACTION_MOV_FORWARD = 0,
	ACTION_MOV_BACKWARD,
	ACTION_MOV_SLIDE_R,
	ACTION_MOV_SLIDE_L,
	ACTION_MOV_SLIDE_UP,
	ACTION_MOV_SLIDE_DOWN,
	ACTION_MOV_TURN_R,
	ACTION_MOV_TURN_L,
	ACTION_MOV_JUMP,
	ACTION_MOV_CROUCH,
	ACTION_MOV_RUN,
	ACTION_MOV_BOOST,
	ACTION_MOV_SLOW,
	ACTION_MOV_ABS_YAW,
	ACTION_MOV_ABS_PITCH,
	ACTION_MOV_YAW,
	ACTION_MOV_PITCH,

	ACTION_ATK_FIRE,
	ACTION_ATK_RAISEWEAPON,
	ACTION_ATK_UNLOCK_TRIGGER_SAFETY,

	ACTION_ARMS_SELECTWEAPON1,
	ACTION_ARMS_SELECTWEAPON2,
	ACTION_ARMS_SELECTWEAPON3,
	ACTION_ARMS_SELECTWEAPON4,
	ACTION_ARMS_SELECTWEAPON5,
	ACTION_ARMS_SELECTWEAPON6,

	ACTION_MISC_USEITEM,
	ACTION_MISC_NEXTITEM,
	ACTION_MISC_PREVITEM,

	ACTION_MISC_CAMERA_ZOOMUP,
	ACTION_MISC_CAMERA_ZOOMOUT,

	ACTION_QMENU_UP,
	ACTION_QMENU_DOWN,
	ACTION_QMENU_OPEN,

	ACTION_MISC_TOGGLE_HEADLIGHT,
	ACTION_MISC_HOLD_HEADLIGHT,
	ACTION_MISC_TOGGLE_NIGHTVISION,
	ACTION_MISC_HOLD_NIGHTVISION,
	ACTION_MISC_TOGGLE_BINOCULAR,
	ACTION_MISC_HOLD_BINOCULAR,

	ACTION_MISC_TOGGLE_RADAR,
	ACTION_MISC_HOLD_RADAR,
	ACTION_MISC_SHOW_RADAR,
	ACTION_MISC_HIDE_RADAR,

	ACTION_MISC_TOGGLE_HUD,          ///< show / hide the HUD
	ACTION_MISC_HOLD_HUD,            ///< show the HUD while the key is pressed down
	ACTION_MISC_SHOW_HUD,
	ACTION_MISC_HIDE_HUD,

	ACTION_MISC_CYCLE_WEAPON,
	ACTION_MISC_CYCLE_VIEWPOINTS,
	ACTION_MISC_CYCLE_TARGET_FOCUS,

	// action code for pseudo aircraft control
	ACTION_MISC_TOGGLE_LANDING_GEAR,

	// action codes for pseudo aircraft control
	ACTION_MOV_ACCEL,
	ACTION_MOV_BRAKE,
	ACTION_MOV_YAW_ACCEL,
	ACTION_MOV_YAW_ACCEL_POS,
	ACTION_MOV_YAW_ACCEL_NEG,
	ACTION_MOV_PITCH_ACCEL,
	ACTION_MOV_PITCH_ACCEL_POS,
	ACTION_MOV_PITCH_ACCEL_NEG,
	ACTION_MOV_ROLL_ACCEL,
	ACTION_MOV_ROLL_ACCEL_POS,
	ACTION_MOV_ROLL_ACCEL_NEG,

	ACTION_MOV_LOOK_UP,
	ACTION_MOV_LOOK_DOWN,
	ACTION_MOV_LOOK_RIGHT,
	ACTION_MOV_LOOK_LEFT,

	ACTION_ATK_FIRE0,
	ACTION_ATK_FIRE1,
	ACTION_ATK_FIRE2,
	ACTION_ATK_FIRE3,


	// action codes for command menu

	ACTION_MENU_MIN,

	ACTION_MENU_OPEN_MENU_0 = ACTION_MENU_MIN,
	ACTION_MENU_OPEN_MENU_1,
	ACTION_MENU_OPEN_MENU_2,
	ACTION_MENU_OPEN_MENU_3,
	ACTION_MENU_OPEN_MENU_4,
	ACTION_MENU_OPEN_MENU_5,
	ACTION_MENU_OPEN_MENU_6,
	ACTION_MENU_OPEN_MENU_7,

	ACTION_MENU_CLOSE_MENU_0,
	ACTION_MENU_CLOSE_MENU_1,
	ACTION_MENU_CLOSE_MENU_2,
	ACTION_MENU_CLOSE_MENU_3,
	ACTION_MENU_CLOSE_MENU_4,
	ACTION_MENU_CLOSE_MENU_5,
	ACTION_MENU_CLOSE_MENU_6,
	ACTION_MENU_CLOSE_MENU_7,

	ACTION_MENU_UP,
	ACTION_MENU_DOWN,
	ACTION_MENU_LEFT,
	ACTION_MENU_RIGHT,

	ACTION_MENU_NEXT_DIALOG_UP,
	ACTION_MENU_NEXT_DIALOG_DOWN,
	ACTION_MENU_NEXT_DIALOG_LEFT,
	ACTION_MENU_NEXT_DIALOG_RIGHT,

	ACTION_MENU_OK,
	ACTION_MENU_CANCEL,
	ACTION_MENU_BACK,

	ACTION_MENU_MAX = ACTION_MENU_BACK,

	ACTION_CUTSCENE_SKIP,

	/// Used to let the player change the key configurations of system menu.
	/// Necessary to support different types of gamepads which have no common layout of buttons.
	/// e.g. gamepads of PC

	ACTION_SYSTEM_MENU_MIN,
	ACTION_SYSTEM_MENU_OK = ACTION_SYSTEM_MENU_MIN,
	ACTION_SYSTEM_MENU_CANCEL,
	ACTION_SYSTEM_MENU_BACK,

	ACTION_SYSTEM_MENU_UP,
	ACTION_SYSTEM_MENU_DOWN,
	ACTION_SYSTEM_MENU_LEFT,
	ACTION_SYSTEM_MENU_RIGHT,
	ACTION_SYSTEM_MENU_NEXT_DIALOG_UP,
	ACTION_SYSTEM_MENU_NEXT_DIALOG_DOWN,
	ACTION_SYSTEM_MENU_NEXT_DIALOG_LEFT,
	ACTION_SYSTEM_MENU_NEXT_DIALOG_RIGHT,
	ACTION_SYSTEM_MENU_MAX = ACTION_SYSTEM_MENU_NEXT_DIALOG_RIGHT,

	NUM_ACTION_CODES
};


class CActionCode
{
public:
	static bool IsMenuCode( int action_code ) { return ( ACTION_MENU_MIN <= action_code && action_code <= ACTION_MENU_MAX ); }
};


#define ACTION_NOT_ASSIGNED -255


#endif  /*  __3DACTIONCODE_H__  */
